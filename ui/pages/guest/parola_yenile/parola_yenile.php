<?php
class GuestParolaYenilePage extends AppPageController
{
    public function LoadPageViewModel()
    {
        $Id = $_GET["id"];
        if ($Id == "")
            return $this->ShowPageError();
        $params = ParolaYenileme::AsParams();
        $params->Text = Condition::EQ($Id);
        $yenileme = ParolaYenilemeDb::Get()->GetFirst($params);
        if (! $yenileme)
            return $this->ShowPageError();

        return parent::LoadPageViewModel(); // TODO: Change the autogenerated stub
    }

    public static function ParolaDegistir($parola)
    {
        $Id = $_GET["id"];
        if ($Id == "")
            return "Geçersiz istek.Parolamı unuttum diyerek tekrar link isteyebilirsiniz.";
        $params = ParolaYenileme::AsParams();
        $params->Text = Condition::EQ($Id);
        $yenileme = ParolaYenilemeDb::Get()->GetFirst($params);
        if (! $yenileme)
            return "Geçersiz istek.Parolamı unuttum diyerek tekrar link isteyebilirsiniz.";
        $yenileme->Delete();
        if (Tarih::FarkVer(Tarih::GetDate($yenileme->EklenmeTarihi),Tarih::Bugun()) > 0)
            return "Parola sıfırlama işlemi zaman aşımına uğradı.Parolamı unuttum diyerek tekrar link isteyebilirsiniz.";
        $params = User::AsParams();
        $params->Email = Condition::EQ($yenileme->Email);
        $kullanici = UserDb::Get()->GetFirst($params);
        if (! $kullanici)
            return "Geçersiz istek.Parolamı unuttum diyerek tekrar link isteyebilirsiniz.";
        $kullanici->Parola = DgrCode::Encode($parola);

        return $kullanici->Save();
    }

    public function SetDefaultResources()
    {
        parent::SetDefaultResources();
//        $this->AddResource(JS_BOOTSTRAP_SWEETALERT);
        $this->AddResource("dodatak/metronic/global/plugins/bootstrap-toastr/toastr.min.js");
        $this->AddResource("dodatak/metronic/global/plugins/bootstrap-toastr/toastr.min.css");
    }
}
